{% extends 'base.html.twig' %}

{% block title %}Парсер - Магазин автозапчастей{% endblock %}

{% block content %}
    <div class="container min-vh-100 py-3">
        <form id="parser-form" action="{{ path('app_parser_parse') }}" method="post">
            <div class="pt-3">
                <label for="parser-url">URL:</label>
                <input
                    id="parser-url"
                    class="form-control"
                    name="url"
                    type="url"
                    value="https://bamper.by/zchbu/marka_opel/model_astra/god_2001-2001/toplivo_dizel/enginevalue_1.7/"
                    minlength="10"
                    maxlength="250"
                    required
                >
            </div>
            <div class="my-3">
                <label for="parser-page">Страница:</label>
                <input id="parser-page" class="form-control" name="page" type="number" value="1" max="50" required>
            </div>
            <div class="my-3">
                <label for="parser-car">Автомобиль:</label>
                <select id="parser-car" class="form-select" name="carId" required>
                    {% for car in cars %}
                        <option value="{{ car.carId }}">{{ car }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="my-3">
                <label for="parser-warehouse">Склад:</label>
                <select id="parser-warehouse" class="form-select" name="warehouseId" required>
                    {% for warehouse in warehouses %}
                        <option value="{{ warehouse.warehouseId }}">{{ warehouse }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="my-3">
                <label for="parser-manufacturer">Производитель:</label>
                <select id="parser-manufacturer" class="form-select" name="manufacturerId" required>
                    {% for manufacturer in manufacturers %}
                        <option value="{{ manufacturer.manufacturerId }}">{{ manufacturer }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="d-flex justify-content-center">
                <button class="btn btn-primary">Распарсить</button>
            </div>
        </form>
        <hr>
        <form id="parser-test-form" action="{{ path('app_parser_test') }}" method="post">
            <div class="mt-4 d-flex justify-content-center">
                <button class="btn btn-primary">Запустить тесты</button>
            </div>
        </form>
        <hr>
        <div id="parser-alert" class="d-none">
            <div class="alert">
                <p class="alert-title fs-5"></p>
                <p class="alert-message fs-6"></p>
            </div>
            <hr>
        </div>
        <table class="table table-bordered">
            <thead>
            <tr>
                <th>Id</th>
                <th>Дата и время</th>
                <th>Кол-во записей</th>
            </tr>
            </thead>
            <tbody>
            {% for launch in launches %}
                <tr>
                    <td>{{ (date(launch.createdAt).getTimestamp()) }}</td>
                    <td>{{ launch.createdAt }}</td>
                    <td>{{ launch.rows }}</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
        <div class="d-grid gap-3">
            {% for autopart in autoparts %}
                {% include('components/autopart.html.twig') %}
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block js %}
    <script>
        function showMessage(
            title = 'Validation Error',
            message = 'Please check the entered data',
            level = 'message'
        ) {
            let alertDiv = document.querySelector('#parser-alert');

            alertDiv.querySelector('.alert').classList.add('alert-' + level);
            alertDiv.querySelector('.alert-title').innerText = title;
            alertDiv.querySelector('.alert-message').innerText = message;
            alertDiv.classList.remove('d-none');
        }

        document.querySelector('#parser-form').addEventListener('submit', async function (e) {
            if (this.checkValidity()) {
                e.preventDefault();
            }

            let response = await fetch(this.action, {
                method: 'POST',
                headers: {'Accept': 'application/json'},
                body: new FormData(this),
                credentials: 'include',
            });
            let parsedResponse = await response.json();
            let title = parsedResponse.ok ? 'Successfully done' : 'Error occurred';

            showMessage(title, parsedResponse.detail, parsedResponse.ok ? 'success' : 'error');
        });

        document.querySelector('#parser-test-form').addEventListener('submit', async function (e) {
            e.preventDefault();

            let response = await fetch(this.action, {
                method: 'POST',
                headers: {'Accept': 'application/json'},
                body: new FormData(document.querySelector('#parser-form')),
                credentials: 'include',
            });
            let parsedResponse = await response.json();
            let title = parsedResponse.ok ? 'Successfully done' : 'Error occurred';

            showMessage(title, parsedResponse.detail, parsedResponse.ok ? 'success' : 'error');
        });
    </script>
{% endblock %}
